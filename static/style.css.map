{"version":3,"sources":["_reset.scss","style.scss","_blocs.scss","_exceptions.scss"],"names":[],"mappings":"AACA,iBAGI,sBAIJ,2CAUI,SAIJ,4BAEI,gBAIJ,kBACI,uBAIJ,KACI,gBAAA,CACA,4BAAA,CACA,gBAIJ,eACI,8BAIJ,YAEI,cAAA,CACA,cAIJ,6BAII,aAIJ,uCACI,kBACI,qBAGJ,iBAGI,kCAAA,CACA,qCAAA,CACA,mCAAA,CACA,gCChER,KACI,YAMJ,KACI,YAAA,CACA,8BAAA,CACA,cAGJ,GACI,kBCjBJ,SACI,WAAA,CACA,YAAA,CACA,mBAGJ,iBACI,sBAGJ,OACI,gBAGJ,sBACI,WCnBJ,qBACI,aAGJ,oBACI,cAGJ,qBACI,UAGJ,oBACI","file":"style.css","sourceRoot":"../scss","sourcesContent":["/* Box sizing rules */\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n    margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n    list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n    scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n    min-height: 100vh;\n    text-rendering: optimizeSpeed;\n    line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n    text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n    max-width: 100%;\n    display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n    font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n    html:focus-within {\n        scroll-behavior: auto;\n    }\n\n    *,\n    *::before,\n    *::after {\n        animation-duration: 0.01ms !important;\n        animation-iteration-count: 1 !important;\n        transition-duration: 0.01ms !important;\n        scroll-behavior: auto !important;\n    }\n}","// Il y a peu de style dans cette application, principalement car le il n'y en a pas beaucoup besoin pour avoir un memory fonctionnel !\n\n// En premier lieu on importe un reset (ici celui de Andy Bell, qui est moderne et non intrusif) afin d'appliquer des règles de base a notre CSS.\n@import \"./reset\";\n\n// On définit une taille maximale et on centre notre body\n// Notons l'utilisation de ch comme valeur : la taille du body dépend ainsi de la taille de la typographie, pratique !\nbody {\n    margin: auto;\n}\n\n// On utilise une grille simple : à gauche les scores, à droite le jeu. \n// On divise par 12 la page et on donne 1 fraction aux scores et 11 fractions au jeu.\n// Et on séparer de 20 pixels les éléments de notre grille.\nmain {\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-gap: 20px;\n}\n\nh1 {\n    text-align: center;\n}\n\n@import \"./blocs\";\n@import \"./exceptions\";","// Le tableau qui contient les cartes est aussi une grille\n// Cependant cette fois on ne donne pas de fractions fixes, on utilise repeat() afin de générer autant une grille automatique et responsive\n// minmax() sert en effet à définir une taille minimale et maximale\n// Dans note cas, les cartes doivent faire minimum 100pixels, maximum une fraction.\n.tableau {\n    margin: auto;\n    display: flex;\n    flex-flow: row wrap;\n}\n\n.conteneur-carte {\n    border: 1px solid black;\n}\n\n.carte {\n    min-width: 100px;\n}\n\n.barre-de-progression {\n    width: 100%;\n}","[data-visible=\"false\"] {\n    display: none;\n}\n\n[data-visible=\"true\"] {\n    display: block;\n}\n\n[data-flipped=\"false\"] {\n    opacity: 0;\n}\n\n[data-flipped=\"true\"] {\n    opacity: 1;\n}"]}